/*** Generated by streamline 0.10.17 (callbacks) - DO NOT EDIT ***/ "use strict"; var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb; var __ = require("underscore");

















var uuid = require("node-uuid");
var util = require("util");
var utils = require("../../../../util/utils");
var $ = utils.getLocaleString;





function ApiAppDeployer(options) {
  __.extend(this, options);

  this.apiappClient = utils.createApiAppManagementClient(options.subscription);
  this.resourceClient = utils.createResourceClient(options.subscription);};


__.extend(ApiAppDeployer.prototype, {

  doDeployment: function doDeployment(_) { var self, deployment, __this = this; var __frame = { name: "doDeployment", line: 37 }; return __func(_, this, arguments, doDeployment, 0, __frame, function __$doDeployment() { self = __this;

      return self.withProgress($("Getting package metadata"), function __1(log, _) { var __frame = { name: "__1", line: 40 }; return __func(_, this, arguments, __1, 1, __frame, function __$__1() {

          return self.getMetadata(__cb(_, __frame, 1, 13, function __$__1() { _(); }, true)); }); }, __cb(_, __frame, 2, 9, function __$doDeployment() {


        return self.gatherParameters(__cb(_, __frame, 7, 9, function __$doDeployment() {

          return self.withProgress($("Creating deployment"), function __2(log, _) { var __frame = { name: "__2", line: 47 }; return __func(_, this, arguments, __2, 1, __frame, function __$__2() {

              return self.getDeploymentTemplate(__cb(_, __frame, 1, 13, function __$__2() {
                return self.createDeployment(__cb(_, __frame, 2, 20, _, true)); }, true)); }); }, __cb(_, __frame, 9, 26, function ___(__0, __3) { deployment = __3;

            return _(null, deployment.deployment); }, true)); }, true)); }, true)); }); },


  getMetadata: function getMetadata__1(_) { var parameters, __this = this; var __frame = { name: "getMetadata__1", line: 54 }; return __func(_, this, arguments, getMetadata__1, 0, __frame, function __$getMetadata__1() { return (function __$getMetadata__1(__then) {
        if (__this.package) {
          return __this.apiappClient.templates.getMetadata({
            microserviceId: __this.package.fullName,
            resourceGroup: __this.resourceGroup }, __cb(_, __frame, 2, 57, function ___(__0, __1) { __this.packageMetadata = __1;





            parameters = (__this.packageMetadata.metadata.parameters || []);
            __this.packageMetadata.metadata.parameters = parameters.map(function(p) {
              if (((p.constraints && p.constraints.required) && (p.defaultValue === ""))) {
                p = __.omit(p, "defaultValue"); } ;

              return p; });



            __this.parameters = __this.packageMetadata.metadata.parameters; __then(); }, true)); } else { __then(); } ; })(_); }); },



  getDeploymentTemplate: function getDeploymentTemplate__2(_) { var request, __this = this; var __frame = { name: "getDeploymentTemplate__2", line: 77 }; return __func(_, this, arguments, getDeploymentTemplate__2, 0, __frame, function __$getDeploymentTemplate__2() {
      request = __this.getGenerateDeploymentTemplateRequest();
      return __this.apiappClient.templates.generate(__this.resourceGroup, request, __cb(_, __frame, 2, 58, function ___(__0, __1) { __this.deploymentTemplate = __1; _(); }, true)); }); },


  gatherParameters: function gatherParameters__3(_) { var valueProvider, __this = this; var __frame = { name: "gatherParameters__3", line: 82 }; return __func(_, this, arguments, gatherParameters__3, 0, __frame, function __$gatherParameters__3() { return (function __$gatherParameters__3(__then) {
        if (__this.packageMetadata) {

          __this.parameters.unshift({
            name: "$apiAppName",
            displayName: "ApiApp Name",
            defaultValue: __this.package.id,
            extraValidator: validateApiAppName });


          valueProvider = __this.valueProvider;
          return __this.parameters.forEach_(__cb(_, __frame, 11, 22, __then, true), function __1(_, parameter) { var __frame = { name: "__1", line: 93 }; return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
              return valueProvider(parameter, __cb(_, __frame, 1, 26, function ___(__0, __1) { parameter.value = __1; _(); }, true)); }); }); } else { __then(); } ; })(_); }); },




  getGenerateDeploymentTemplateRequest: function() {
    return {
      location: this.location,
      gateway: this.gatewayFragment(),
      hostingPlan: this.hostingPlanFragment(),
      packages: this.createPackageFragment() }; },





  gatewayFragment: function() {
    return {
      resourceType: "Microsoft.AppService/gateways" }; },




  hostingPlanFragment: function() {
    return {
      resourceType: "Microsoft.Web/serverfarms",
      isNewHostingPlan: false,

      hostingPlanName: this.hostingPlanId.split("/").pop() }; },



  createPackageFragment: function() {
    if (this.package) {
      return [{
        resourceType: "Microsoft.Web/apiapps",
        id: this.package.id,
        version: this.package.version,
        settings: this.parameters.reduce(function(acc, parameter) {
          if (((parameter.uiHint === "Microsoft.SQL") && parameter.value.isNewResource)) {
            acc[parameter.name] = { isNewResource: true }; } ;

          return acc;
        }, { }) },]; }

     else {

      return []; } ; },



  createDeploymentParameters: function() {
    return {
      properties: {
        template: this.deploymentTemplate,
        parameters: this.buildDeploymentParameterValues(),
        mode: "Incremental" } }; },




  buildDeploymentParameterValues: function() {
    var self = this;
    var key = self.package.id;

    var result = { };

    result[key] = {
      value: { } };


    return self.parameters.reduce(function(acc, parameter) {

      var value = parameter.value;
      var secretKey = self.parameterSecret(parameter);
      if (secretKey) {
        acc[util.format("%s_%s_%s", key, parameter.name, secretKey)] = value[secretKey];
        value = __.omit(value, secretKey); } ;


      acc[key].value[parameter.name] = value;
      return acc;
    }, result); },


  parameterSecret: function(parameterData) {
    return ((parameterData.uiHint === "Microsoft.SQL") ? "administratorLoginPassword" : null); },


  createDeployment: function createDeployment__4(_) { var __this = this; var __frame = { name: "createDeployment__4", line: 183 }; return __func(_, this, arguments, createDeployment__4, 0, __frame, function __$createDeployment__4() {
      return __this.resourceClient.deployments.createOrUpdate(__this.resourceGroup, exports.createDeploymentName(), __this.createDeploymentParameters(), __cb(_, __frame, 1, 43, _, true)); }); }});







function validateApiAppName(value) {
  if (((value.length < 8) || (value.length > 50))) {
    return "Name must be between 8 and 50 characters long."; } ;

  if (!/^[A-Za-z0-9][A-Za-z0-9.]*$/.test(value)) {
    return "Name contains invalid characters."; } ;};



function createDeploymentName() {
  return ("AppServiceDeployment_" + uuid());};


__.extend(exports, {
  ApiAppDeployer: ApiAppDeployer,
  validateApiAppName: validateApiAppName,
  createDeploymentName: createDeploymentName});
