/*** Generated by streamline 0.10.17 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb,__tryCatch=__rt.__tryCatch; var __ = require("underscore");















var util = require("util");
var async = require("async");

var utils = require("../../../util/utils");
var $ = utils.getLocaleString;

function VMImage(cli, serviceClients, resourceGroupName, params) {
  this.cli = cli;
  this.serviceClients = serviceClients;
  this.resourceGroupName = resourceGroupName;
  this.params = params;};


__.extend(VMImage.prototype, {
  getVMImagePublisherList: function getVMImagePublisherList__1(location, _) { var publishers, progress, __this = this; var __frame = { name: "getVMImagePublisherList__1", line: 31 }; return __func(_, this, arguments, getVMImagePublisherList__1, 1, __frame, function __$getVMImagePublisherList__1() {

      progress = __this.cli.interaction.progress(util.format($("Getting virtual machine and/or extension image publishers (Location: \"%s\")"), location)); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getVMImagePublisherList__1() {

            return __this.serviceClients.computeManagementClient.virtualMachineImages.listPublishers({ location: location }, __cb(_, __frame, 4, 84, function ___(__0, __1) { publishers = __1; _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$getVMImagePublisherList__1() {

              progress.end(); __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$getVMImagePublisherList__1() {


          return _(null, publishers); }); }); }); },


  getVMImageOffersList: function getVMImageOffersList__2(location, publisherName, _) { var offers, progress, __this = this; var __frame = { name: "getVMImageOffersList__2", line: 43 }; return __func(_, this, arguments, getVMImageOffersList__2, 2, __frame, function __$getVMImageOffersList__2() {

      progress = __this.cli.interaction.progress(util.format($("Getting virtual machine image offers (Publisher: \"%s\" Location:\"%s\")"), publisherName, location)); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getVMImageOffersList__2() {

            return __this.serviceClients.computeManagementClient.virtualMachineImages.listOffers({
              location: location,
              publisherName: publisherName }, __cb(_, __frame, 4, 80, function ___(__0, __1) { offers = __1; _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$getVMImageOffersList__2() {


              progress.end(); __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$getVMImageOffersList__2() {


          offers.resources.map(function(sku) {
            sku.publisher = publisherName;
            return sku; });


          return _(null, offers); }); }); }); },


  getVMImageSkusList: function getVMImageSkusList__3(location, publisherName, offer, _) { var skus, progress, __this = this; var __frame = { name: "getVMImageSkusList__3", line: 63 }; return __func(_, this, arguments, getVMImageSkusList__3, 3, __frame, function __$getVMImageSkusList__3() {

      progress = __this.cli.interaction.progress(util.format($("Getting virtual machine image skus (Publisher:\"%s\" Offer:\"%s\" Location:\"%s\")"), publisherName, offer, location)); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getVMImageSkusList__3() {

            return __this.serviceClients.computeManagementClient.virtualMachineImages.listSkus({
              location: location,
              publisherName: publisherName,
              offer: offer }, __cb(_, __frame, 4, 78, function ___(__0, __1) { skus = __1; _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$getVMImageSkusList__3() {


              progress.end(); __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$getVMImageSkusList__3() {


          skus.resources.map(function(sku) {
            sku.publisher = publisherName;
            sku.offer = offer;
            return sku; });


          return _(null, skus); }); }); }); },


  getVMImageListForSku: function getVMImageListForSku__4(location, publisherName, offer, skus, _) { var images, progress, __this = this; var __frame = { name: "getVMImageListForSku__4", line: 85 }; return __func(_, this, arguments, getVMImageListForSku__4, 4, __frame, function __$getVMImageListForSku__4() {

      progress = __this.cli.interaction.progress(util.format($("Getting virtual machine images (Publisher:\"%s\" Offer:\"%s\" Sku: \"%s\" Location:\"%s\")"), publisherName, offer, skus, location)); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getVMImageListForSku__4() {

            return __this.serviceClients.computeManagementClient.virtualMachineImages.list({
              location: location,
              publisherName: publisherName,
              offer: offer,
              skus: skus }, __cb(_, __frame, 4, 80, function ___(__0, __1) { images = __1; _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$getVMImageListForSku__4() {


              progress.end(); __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$getVMImageListForSku__4() {


          return _(null, images); }); }); }); },


  getVMImageList: function getVMImageList__5(imageFilter, _) { var __this = this; var __frame = { name: "getVMImageList__5", line: 102 }; return __func(_, this, arguments, getVMImageList__5, 1, __frame, function __$getVMImageList__5() { return (function __$getVMImageList__5(__then) {
        if (!imageFilter.location) {
          return __this.cli.interaction.prompt($("Enter location: "), __cb(_, __frame, 2, 50, function ___(__0, __1) { imageFilter.location = __1; __then(); }, true)); } else { __then(); } ; })(function __$getVMImageList__5() { return (function __$getVMImageList__5(__then) {


          if (((imageFilter.publishername && imageFilter.offer) && imageFilter.skus)) {
            return __this._getVMImageListForPublisherOfferAndSkus(imageFilter, __cb(_, __frame, 6, 18, _, true)); } else { __then(); } ; })(function __$getVMImageList__5() { return (function __$getVMImageList__5(__then) {


            if ((imageFilter.publishername && imageFilter.offer)) {
              return __this._getVMImageListForPublisherAndOffer(imageFilter, __cb(_, __frame, 10, 18, _, true)); } else { __then(); } ; })(function __$getVMImageList__5() { return (function __$getVMImageList__5(__then) {


              if (imageFilter.publishername) {
                return __this._getVMImageListForPublisher(imageFilter, __cb(_, __frame, 14, 18, _, true)); } else { __then(); } ; })(_); }); }); }); }); },



  _getVMImageListForPublisherOfferAndSkus: function _getVMImageListForPublisherOfferAndSkus__6(imageFilter, _) { var that, images, imageQueries, imageCollection, __this = this; var __frame = { name: "_getVMImageListForPublisherOfferAndSkus__6", line: 120 }; return __func(_, this, arguments, _getVMImageListForPublisherOfferAndSkus__6, 1, __frame, function __$_getVMImageListForPublisherOfferAndSkus__6() { that = __this;


      return that.getVMImageListForSku(imageFilter.location, imageFilter.publishername, imageFilter.offer, imageFilter.skus, __cb(_, __frame, 3, 22, function ___(__0, __1) { images = __1;
        imageQueries = [];
        images.resources.forEach(function(image) {
          imageQueries.push(function(callBack) {
            that.serviceClients.computeManagementClient.virtualMachineImages.get({
              location: imageFilter.location,
              offer: imageFilter.offer,
              publisherName: imageFilter.publishername,
              skus: imageFilter.skus,
              version: image.name
            }, function(error, imgResult) {
              if (error) {
                return callBack(error); } ;


              imgResult = (error ? { oSDiskImage: { }, dataDiskImages: [] } : imgResult.virtualMachineImage);
              image.publisher = imageFilter.publishername;
              image.offer = imageFilter.offer;
              image.skus = imageFilter.skus;
              image.urn = ((((((image.publisher + ":") + image.offer) + ":") + image.skus) + ":") + image.name);
              image.operatingSystem = imgResult.oSDiskImage.operatingSystem;
              image.dataDiskImages = imgResult.dataDiskImages;
              image.purchasePlan = imgResult.purchasePlan;
              return callBack(null, image); }); }); });




        return async.parallel(imageQueries, __cb(_, __frame, 31, 32, function ___(__0, __2) { imageCollection = __2;
          return _(null, { resources: imageCollection }); }, true)); }, true)); }); },


  _getVMImageListForPublisherAndOffer: function _getVMImageListForPublisherAndOffer__7(imageFilter, _) { var that, imageQueries, skusCollection, imageCollection, __this = this; var __frame = { name: "_getVMImageListForPublisherAndOffer__7", line: 155 }; return __func(_, this, arguments, _getVMImageListForPublisherAndOffer__7, 1, __frame, function __$_getVMImageListForPublisherAndOffer__7() { that = __this;



      that.cli.output.info("The parameter --sku if specified will be ignored");
      return that.getVMImageSkusList(imageFilter.location, imageFilter.publishername, imageFilter.offer, __cb(_, __frame, 5, 30, function ___(__0, __1) { skusCollection = __1;
        imageQueries = [];
        skusCollection.resources.forEach(function(skus) {
          imageQueries.push(function(callBack) {
            that.serviceClients.computeManagementClient.virtualMachineImages.list({
              location: imageFilter.location,
              publisherName: imageFilter.publishername,
              offer: imageFilter.offer,
              skus: skus.name
            }, function(error, vmImages) {
              vmImages = (error ? { resources: [] } : vmImages);
              vmImages.skus = skus.name;
              skus.vmImages = vmImages;
              return callBack(error, vmImages); }); }); });




        return async.parallel(imageQueries, __cb(_, __frame, 23, 10, function __$_getVMImageListForPublisherAndOffer__7() {


          imageQueries = [];
          skusCollection.resources.forEach(function(skus) {
            skus.vmImages.resources.forEach(function(image) {
              imageQueries.push(function(callBack) {
                that.serviceClients.computeManagementClient.virtualMachineImages.get({
                  location: imageFilter.location,
                  offer: imageFilter.offer,
                  publisherName: imageFilter.publishername,
                  skus: skus.vmImages.skus,
                  version: image.name
                }, function(error, imgResult) {
                  if (error) {
                    return callBack(error); } ;

                  imgResult = (error ? { oSDiskImage: { }, dataDiskImages: [] } : imgResult.virtualMachineImage);
                  image.publisher = imageFilter.publishername;
                  image.offer = imageFilter.offer;
                  image.skus = skus.vmImages.skus;
                  image.urn = ((((((image.publisher + ":") + image.offer) + ":") + image.skus) + ":") + image.name);
                  image.operatingSystem = imgResult.oSDiskImage.operatingSystem;
                  image.dataDiskImages = imgResult.dataDiskImages;
                  image.purchasePlan = imgResult.purchasePlan;
                  return callBack(null, image); }); }); }); });





          return async.parallel(imageQueries, __cb(_, __frame, 54, 32, function ___(__0, __2) { imageCollection = __2;
            return _(null, { resources: imageCollection }); }, true)); }, true)); }, true)); }); },


  _getVMImageListForPublisher: function _getVMImageListForPublisher__8(imageFilter, _) { var that, imageQueries, offers, skuQueries, skusCollections, imageCollection, __this = this; var __frame = { name: "_getVMImageListForPublisher__8", line: 213 }; return __func(_, this, arguments, _getVMImageListForPublisher__8, 1, __frame, function __$_getVMImageListForPublisher__8() { that = __this;



      that.cli.output.info("The parameters --offer and --sku if specified will be ignored");
      return that.getVMImageOffersList(imageFilter.location, imageFilter.publishername, __cb(_, __frame, 5, 22, function ___(__0, __1) { offers = __1;
        skuQueries = [];
        offers.resources.forEach(function(offer) {
          skuQueries.push(function(callBack) {
            offer = offer;
            that.serviceClients.computeManagementClient.virtualMachineImages.listSkus({
              location: imageFilter.location,
              publisherName: imageFilter.publishername,
              offer: offer.name
            }, function(error, skus) {
              skus = (error ? { resources: [] } : skus);
              skus.offer = offer.name;
              offer.skus = skus;
              return callBack(error, skus); }); }); });




        return async.parallel(skuQueries, __cb(_, __frame, 23, 32, function ___(__0, __2) { skusCollections = __2;
          imageQueries = [];
          skusCollections.forEach(function(skusCollection) {
            skusCollection.resources.forEach(function(skus) {
              imageQueries.push(function(callBack) {
                skus = skus;
                that.serviceClients.computeManagementClient.virtualMachineImages.list({
                  location: imageFilter.location,
                  publisherName: imageFilter.publishername,
                  offer: skusCollection.offer,
                  skus: skus.name
                }, function(error, vmImages) {
                  vmImages = (error ? { resources: [] } : vmImages);
                  vmImages.skus = skus.name;
                  skus.vmImages = vmImages;
                  return callBack(error, vmImages); }); }); }); });





          return async.parallel(imageQueries, __cb(_, __frame, 44, 10, function __$_getVMImageListForPublisher__8() {
            imageQueries = [];

            skusCollections.forEach(function(skusCollection) {
              skusCollection.resources.forEach(function(skus) {
                skus.vmImages.resources.forEach(function(image) {
                  imageQueries.push(function(callBack) {
                    that.serviceClients.computeManagementClient.virtualMachineImages.get({
                      location: imageFilter.location,
                      offer: skusCollection.offer,
                      publisherName: imageFilter.publishername,
                      skus: skus.name,
                      version: image.name
                    }, function(error, imgResult) {
                      if (error) {
                        return callBack(error); } ;

                      imgResult = (error ? { oSDiskImage: { }, dataDiskImages: [] } : imgResult.virtualMachineImage);
                      image.publisher = imageFilter.publishername;
                      image.offer = skusCollection.offer;
                      image.skus = skus.name;
                      image.urn = ((((((image.publisher + ":") + image.offer) + ":") + image.skus) + ":") + image.name);
                      image.operatingSystem = imgResult.oSDiskImage.operatingSystem;
                      image.dataDiskImages = imgResult.dataDiskImages;
                      image.purchasePlan = imgResult.purchasePlan;
                      return callBack(null, image); }); }); }); }); });






            return async.parallel(imageQueries, __cb(_, __frame, 76, 32, function ___(__0, __3) { imageCollection = __3;
              return _(null, { resources: imageCollection }); }, true)); }, true)); }, true)); }, true)); }); },


  getVMExtensionImageTypeList: function getVMExtensionImageTypeList__9(location, publisherName, _) { var extTypes, progress, __this = this; var __frame = { name: "getVMExtensionImageTypeList__9", line: 293 }; return __func(_, this, arguments, getVMExtensionImageTypeList__9, 2, __frame, function __$getVMExtensionImageTypeList__9() {

      progress = __this.cli.interaction.progress(util.format($("Getting virtual machine extension image types (Publisher: \"%s\" Location:\"%s\")"), publisherName, location)); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getVMExtensionImageTypeList__9() {

            return __this.serviceClients.computeManagementClient.virtualMachineExtensionImages.listTypes({
              location: location,
              publisherName: publisherName }, __cb(_, __frame, 4, 91, function ___(__0, __1) { extTypes = __1; _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$getVMExtensionImageTypeList__9() {


              progress.end(); __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$getVMExtensionImageTypeList__9() {


          extTypes.resources.map(function(item) {
            item.publisher = publisherName;
            return item; });


          return _(null, extTypes); }); }); }); },


  getVMExtensionImageVersionList: function getVMExtensionImageVersionList__10(location, publisherName, typeName, _) { var extVersions, resultList, progress, __this = this; var __frame = { name: "getVMExtensionImageVersionList__10", line: 313 }; return __func(_, this, arguments, getVMExtensionImageVersionList__10, 3, __frame, function __$getVMExtensionImageVersionList__10() {
      extVersions = { resources: [] };
      resultList = null;
      progress = __this.cli.interaction.progress(util.format($("Getting virtual machine extension image verions (Publisher: \"%s\" Type:\"%s\" Location:\"%s\")"), publisherName, typeName, location)); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getVMExtensionImageVersionList__10() {


            return __this.serviceClients.computeManagementClient.virtualMachineExtensionImages.listVersions({
              location: location,
              publisherName: publisherName,
              type: typeName }, __cb(_, __frame, 6, 93, function ___(__0, __1) { resultList = __1; _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$getVMExtensionImageVersionList__10() {


              progress.end(); __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$getVMExtensionImageVersionList__10() {


          resultList.resources.forEach(function(versionItem) {
            extVersions.resources.push(versionItem); });


          extVersions.resources.map(function(item) {
            item.publisher = publisherName;
            item.typeName = typeName;
            return item; });


          return _(null, extVersions); }); }); }); },


  getVMExtensionImage: function getVMExtensionImage__11(location, publisherName, typeName, version, _) { var extImage, progress, __this = this; var __frame = { name: "getVMExtensionImage__11", line: 341 }; return __func(_, this, arguments, getVMExtensionImage__11, 4, __frame, function __$getVMExtensionImage__11() {
      extImage = null;
      progress = __this.cli.interaction.progress(util.format($("Getting virtual machine extension images (Publisher: \"%s\" Type:\"%s\" Version:\"%s\" Location:\"%s\")"), publisherName, typeName, version, location)); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getVMExtensionImage__11() {

            return __this.serviceClients.computeManagementClient.virtualMachineExtensionImages.get({
              location: location,
              publisherName: publisherName,
              type: typeName,
              version: version }, __cb(_, __frame, 4, 91, function ___(__0, __1) { extImage = __1; _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$getVMExtensionImage__11() {


              progress.end(); __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$getVMExtensionImage__11() {


          return _(null, extImage); }); }); }); }});




module.exports = VMImage;
